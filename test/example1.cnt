# Comment
# Automatic type-deduction coming soon

let my_bool: bool = false
let my_int: mut int = 0
let my_real: mut real = 0.0
let my_int_ref: &int = my_int
let my_real_ref: &real = my_real

# Intrinsics (type!, dropmut!, dropref!, line!, column!)
let my_real_ref_mut: mut type! my_real_ref = my_real_ref

fn f(x: real, y: real): real
	return x + y
end

outer_loop:
for let i: mut int = 1, 100 do
	for let j: mut int = i + 1, 100 do
			let callback: real(real, real) = f # Function type (see line 2)

			if i*i == callback(i, i) then
				continue outer_loop
			end
		end
	end
end
