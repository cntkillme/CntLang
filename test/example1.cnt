#!/usr/bin/cnt

// Single-line Comment

/*
	Multi-line Comment

	Types:
		bool
		int
		real
		string
		function

	Modifiers:
		mut
		ref
*/

// Globals
mut bool my_bool_global;
mut int my_int_global=2+2;
mut real my_real_global;
ref int my_int_global_ref = my_int_global; // cannot alter, const by default

real f(real x, real y)
{
	return x + y;
}

real g(real x, real y)
{
	return x * y;
}

// Main function
void main()
{
	mut int sum = 0;
	mut int i = 0;
	mut int curline = __intrinsic(line);

	real(real, real) f1 = f; // ref is implied for function types
	mut ref real(real, real) f2 = g; // mut is ignored here, functions are immutable

	int const = 5;
	ref mut int constref = const; // not allowed, const is not mut

	sum = g(f(1, 2), 3);

	outer:
	while (i < 10) {
		mut int j = 0;

		inner:
		while (j < 10) {
			if ((i * j) % 5 == 0)
				sum *= sum;
			else if ((i * j) % 7 == 0)
				break inner;

			j += 1;
		}

		i += 1;
	}

	my_int_global_ref = 5; // not allowed, ref is not mut
	my_int_global = 3; // okay
}
