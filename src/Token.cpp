#include "Token.hpp"

namespace CntLang::Compiler
{
	const std::unordered_map<std::string, TokenType> Terminals {
		{ ";", TokenType::Semicolon },
		{ ",", TokenType::Delimiter },
		{ "{", TokenType::LeftBrace },
		{ "}", TokenType::RightBrace },
		{ "[", TokenType::LeftBracket },
		{ "]", TokenType::RightBracket },
		{ "(", TokenType::LeftParenthesis },
		{ ")", TokenType::RightParenthesis },
		{ "=", TokenType::Assignment },
		{ "+=", TokenType::AdditionAssignment },
		{ "-=", TokenType::SubtractionAssignment },
		{ "*=", TokenType::MultiplicationAssignment },
		{ "/=", TokenType::DivisionAssignment },
		{ "%=", TokenType::RemainderAssignment },
		{ "^=", TokenType::ExponentiationAssignment },
		{ "+", TokenType::Addition },
		{ "-", TokenType::Subtraction },
		{ "*", TokenType::Multiplication },
		{ "/", TokenType::Division },
		{ "%", TokenType::Remainder },
		{ "^", TokenType::Exponentiation },
		{ "&&", TokenType::And },
		{ "||", TokenType::Or },
		{ "!", TokenType::Not },
		{ "==", TokenType::Equals },
		{ "!=", TokenType::NotEquals },
		{ "<", TokenType::LessThan },
		{ "<=", TokenType::LessThanOrEqual },
		{ ">", TokenType::GreaterThan },
		{ ">=", TokenType::GreaterThanOrEqual },
		{ "void", TokenType::Void },
		{ "bool", TokenType::Bool },
		{ "int", TokenType::Int },
		{ "real", TokenType::Real },
		{ "string", TokenType::String },
		{ "mut", TokenType::Mutable },
		{ "ref", TokenType::Reference },
		{ "if", TokenType::If },
		{ "then", TokenType::Then },
		{ "elseif", TokenType::ElseIf },
		{ "else", TokenType::Else },
		{ "while", TokenType::While },
		{ "do", TokenType::Do },
		{ "end", TokenType::End },
		{ "return", TokenType::Return },
		{ "break", TokenType::Break },
		{ "continue", TokenType::Continue },
		{ "true", TokenType::True },
		{ "false", TokenType::False }
	};
}
